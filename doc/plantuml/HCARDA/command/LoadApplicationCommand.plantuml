@startuml

 package de.gematik.ti.healthcardaccess {
    interface IHealthCardCommand {
        {abstract} + executeOn()
    }
  }

 package de.gematik.ti.healthcardaccess {
    abstract class AbstractHealthCardCommand {
        {static} - LOG : Logger
        {static} # NE_MAX_EXTENDED_LENGTH : int
        {static} # NE_MAX_SHORT_LENGTH : int
        {static} # EXPECT_ALL : int
        # cla : int
        # ins : int
        # p1 : int
        # p2 : int
        # data : byte[]
        # ne : int
        # AbstractHealthCardCommand()
        # AbstractHealthCardCommand()
        {abstract} + getTechnicalResponseApdus()
        - inferResponseStatusFromResponseCode()
        + executeOn()
        # sendApdu()
        - getCommandApdu()
    }
  }

 package de.gematik.ti.healthcardaccess {
     package de.gematik.ti.healthcardaccess.commands {
       class LoadApplicationCommand {
           {static} - CLA_COMMAND_CHAINING : int
           {static} - CLA_NO_COMMAND_CHAINING : int
           {static} - INS : int
           {static} - NO_MEANING : int
           {static} - RESPONSE_MESSAGES : Map<Integer, ResponseStatus>
           + getTechnicalResponseApdus()
           + LoadApplicationCommand()
       }
     }
   }

  AbstractHealthCardCommand -up-|> IHealthCardCommand
  LoadApplicationCommand -up-|> AbstractHealthCardCommand

@enduml