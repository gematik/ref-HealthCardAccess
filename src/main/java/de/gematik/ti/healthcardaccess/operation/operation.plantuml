@startuml

title __OPERATION's Class Diagram__\n

  namespace de.gematik.ti.healthcardaccess {
    namespace operation {
      interface de.gematik.ti.healthcardaccess.operation.CheckedFunction {
          {abstract} + apply()
      }
    }
  }
  

  namespace de.gematik.ti.healthcardaccess {
    namespace operation {
      interface de.gematik.ti.healthcardaccess.operation.CheckedSupplier {
          {abstract} + get()
      }
    }
  }
  

  namespace de.gematik.ti.healthcardaccess {
    namespace operation {
      interface de.gematik.ti.healthcardaccess.operation.Result {
          {static} + evaluate()
          {static} + failure()
          + flatMap()
          {abstract} + fold()
          + getOrNull()
          + getOrValue()
          + map()
          {static} + success()
      }
    }
  }
  

  namespace de.gematik.ti.healthcardaccess {
    namespace operation {
      class de.gematik.ti.healthcardaccess.operation.Result.Failure {
          - throwable : Throwable
          + Failure()
          + fold()
      }
    }
  }
  

  namespace de.gematik.ti.healthcardaccess {
    namespace operation {
      class de.gematik.ti.healthcardaccess.operation.Result.Success {
          + Success()
          + fold()
      }
    }
  }
  

  namespace de.gematik.ti.healthcardaccess {
    namespace operation {
      interface de.gematik.ti.healthcardaccess.operation.ResultOperation {
          {static} + LOG : Logger
          + flatMap()
          {static} + lazyUnitRo()
          + map()
          + scheduleOn()
          + subscribe()
          + subscribe()
          + subscribe()
          + test()
          {static} + unitRo()
          + validate()
          + zip()
      }
    }
  }
  

  namespace de.gematik.ti.healthcardaccess {
    namespace operation {
      class de.gematik.ti.healthcardaccess.operation.SchedulableSubscriber {
          ~ onError : Consumer<Throwable>
          ~ onSuccess : Consumer<T>
          + SchedulableSubscriber()
          + observerScheduler()
          + onError()
          + onSuccess()
          + subscriberScheduler()
      }
    }
  }
  

  namespace de.gematik.ti.healthcardaccess {
    namespace operation {
      interface de.gematik.ti.healthcardaccess.operation.Subscriber {
          + observerScheduler()
          {abstract} + onError()
          {abstract} + onSuccess()
          + subscriberScheduler()
      }
    }
  }
  

  namespace de.gematik.ti.healthcardaccess {
    namespace operation {
      class de.gematik.ti.healthcardaccess.operation.TestSubscriber {
          - exception : Throwable
          + assertError()
          + assertError()
          + assertPredicate()
          + assertSuccess()
          + assertValue()
          + assertValue()
          + get()
          + observerScheduler()
          + onError()
          + onSuccess()
          + subscriberScheduler()
      }
    }
  }
  

  namespace de.gematik.ti.healthcardaccess {
    namespace operation {
      class de.gematik.ti.healthcardaccess.operation.UnitFuture {
          + UnitFuture()
          + cancel()
          + get()
          + get()
          + isCancelled()
          + isDone()
      }
    }
  }
  

  de.gematik.ti.healthcardaccess.operation.Result +-down- de.gematik.ti.healthcardaccess.operation.Result.Failure
  de.gematik.ti.healthcardaccess.operation.Result +-down- de.gematik.ti.healthcardaccess.operation.Result.Success
  de.gematik.ti.healthcardaccess.operation.Result.Failure .up.|> de.gematik.ti.healthcardaccess.operation.Result
  de.gematik.ti.healthcardaccess.operation.Result.Success .up.|> de.gematik.ti.healthcardaccess.operation.Result
  de.gematik.ti.healthcardaccess.operation.Result.Success o-- T : t
  de.gematik.ti.healthcardaccess.operation.SchedulableSubscriber .up.|> de.gematik.ti.healthcardaccess.operation.Subscriber
  de.gematik.ti.healthcardaccess.operation.SchedulableSubscriber o-- de.gematik.ti.healthcardaccess.operation.scheduler.Scheduler : scheduler
  de.gematik.ti.healthcardaccess.operation.TestSubscriber .up.|> de.gematik.ti.healthcardaccess.operation.Subscriber
  de.gematik.ti.healthcardaccess.operation.TestSubscriber o-- T : value
  de.gematik.ti.healthcardaccess.operation.UnitFuture .up.|> java.util.concurrent.Future
  de.gematik.ti.healthcardaccess.operation.UnitFuture o-- T : value


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
